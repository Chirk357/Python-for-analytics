# 4.1 Сгенерируйте случайные целые числа от 0 до 100 в количестве 5 штук с помощью модуля random
# ● Зафиксируйте псевдогенерацию, чтобы
сгенерированные значения всегда были одинаковые
# ● Используйте list comprehensions



import random


random.seed(5) #фиксируем от 5 элементов
data = [random.randint(0, 100) for i in range(5)] #5 не включительно. Randint - рэндомное интовое число. random.randint(0, 100) -> цикл 5 раз выбирает любое число от 0 до 100
#data = [random.randint(0, 100) for i in "uhtjd"] #"uhtjd" 
print(data)


#4.2
# 1. данные по клиенту (в зависимости от итерации, на 0 итерации
# вернется 0 элемент, на 1 итерации вернется 1 элемент и тд)
# 2. целочисленное значение, которое показывает, сколько секунд
# прошло с предыдущей итерации
# Примечание: секунды, которые возвращаются должны показывать время не
# с начала запуска генератора, а именно то время, которое прошло с
# предыдущей итерации. А значит время на первой итерации должно
# равняться 0.
# Используйте функцию time из модуля time для подсчета времени.
# Чтобы проверить работу таймера, запустите проход по
# генератору в цикле с time.sleep(2)

import time

#функция генератор
def function(nums: list) -> tuple:
    last_time = None
    for num in nums:
        cur_time = time.time() #получаем время от начала эпохи
        if last_time:
            delta = cur_time - last_time
        else:
            delta = 0
        last_time = time.time()
        yield num, int(delta)

function(data)

for cur_items in function(data):
    print(cur_items)
    time.sleep(2)


